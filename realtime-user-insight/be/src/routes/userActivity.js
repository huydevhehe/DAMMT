// ========================== üü¢ IMPORT ==========================
import express from "express";
import { pool } from "../db.js";

const router = express.Router();

// ========================== üü¢ API L·∫§Y H√ÄNH ƒê·ªòNG USER ==========================
router.get("/:username", async (req, res) => {
  const { username } = req.params;

  try {
    console.log("üì• [API] Nh·∫≠n y√™u c·∫ßu xem h√†nh ƒë·ªông user:", username);

    // üü¢ L·∫•y th·ªùi ƒëi·ªÉm login g·∫ßn nh·∫•t c·ªßa user
    const [loginRows] = await pool.query(
      `
      SELECT MAX(timestamp) AS last_login
      FROM events
      WHERE user_name = ? AND type = 'login'
      `,
      [username]
    );

    const lastLoginTime = loginRows[0]?.last_login;
    console.log("üïí [API] L·∫ßn ƒëƒÉng nh·∫≠p g·∫ßn nh·∫•t:", lastLoginTime);

    // üü¢ N·∫øu c√≥ loginTime ‚Üí ch·ªâ l·∫•y s·ª± ki·ªán sau th·ªùi ƒëi·ªÉm ƒë√≥
    let query = `
      SELECT type, page, element, timestamp
      FROM events
      WHERE user_name = ?
    `;
    const params = [username];

    if (lastLoginTime) {
      query += " AND timestamp >= ?";
      params.push(lastLoginTime);
    }

    query += " ORDER BY timestamp DESC LIMIT 50";

    const [rows] = await pool.query(query, params);
    console.log(`üìä [API] Tr·∫£ v·ªÅ ${rows.length} h√†nh ƒë·ªông sau login c·ªßa user ${username}`);

    res.json(rows);
  } catch (err) {
    console.error("‚ùå [API] L·ªói l·∫•y d·ªØ li·ªáu userActivity:", err);
    res.status(500).json({ message: "L·ªói server" });
  }
});

export default router;
