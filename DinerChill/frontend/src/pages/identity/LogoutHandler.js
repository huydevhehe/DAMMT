import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useApp } from '../../context/AppContext';
import LogoutConfirmation from './LogoutConfirmation';
import '../../styles/layout/logout-confirmation.css';

// ‚úÖ import h√†m ng·∫Øt k·∫øt n·ªëi realtime ƒë√∫ng c√°ch
import { disconnectRealtime } from '../../lib/tracking/realtimeTracker';
import { notifyUserLogout } from "../../lib/tracking/realtimeTracker"; // ƒê·∫£m b·∫£o import ƒë√∫ng

function LogoutHandler() {
  const { logout } = useApp();
  const navigate = useNavigate();
  const [showLogoutConfirm, setShowLogoutConfirm] = useState(false);

  const handleLogoutClick = (e) => {
    e.preventDefault();
    setShowLogoutConfirm(true);
  };

  const confirmLogout = () => {
    // ‚úÖ L·∫•y user hi·ªán t·∫°i t·ª´ localStorage
    const currentUser = JSON.parse(localStorage.getItem("user"));

    // üÜï G·ª≠i th√¥ng b√°o realtime ƒë·∫øn server r·∫±ng user n√†y v·ª´a logout
    notifyUserLogout(currentUser?.name); // G·ª≠i s·ª± ki·ªán logout t·ªõi Realtime

    // ‚úÖ G·ªçi h√†m logout c·ªßa context (n·∫øu c√≥)
    logout();

    // ‚úÖ X√≥a to√†n b·ªô th√¥ng tin user trong localStorage
    localStorage.removeItem("user");
    localStorage.removeItem("accessToken");
    localStorage.removeItem("refreshToken");
    localStorage.removeItem("role");

    // ‚úÖ Ng·∫Øt k·∫øt n·ªëi socket realtime
    disconnectRealtime(); // üëâ ng·∫Øt socket + reset tracker

    console.log("üî¥ Socket realtime ƒë√£ ng·∫Øt k·∫øt n·ªëi sau khi logout");

    // ‚úÖ Quay l·∫°i trang ch·ªß ho·∫∑c login
    navigate('/');
    setShowLogoutConfirm(false);
  };

  const cancelLogout = () => {
    setShowLogoutConfirm(false);
  };

  return (
    <>
      <button className="logout-btn" onClick={handleLogoutClick}>
        <span className="nav-icon">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="18"
            height="18"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          >
            <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
            <polyline points="16 17 21 12 16 7"></polyline>
            <line x1="21" y1="12" x2="9" y2="12"></line>
          </svg>
        </span>
        Tho√°t
      </button>

      {showLogoutConfirm && (
        <LogoutConfirmation
          onConfirm={confirmLogout}
          onCancel={cancelLogout}
        />
      )}
    </>
  );
}

export default LogoutHandler;
